----------------
-- TSP PROGRAM FOR PERFORMING TRANSFER SWEEPS
-- Sweeps over gate voltage and measures channel current

-- INPUT sweep start and end points with ABSOLUTE step size

-------- MAIN PROGRAM --------
reset()
display.clear()

function xxx(vd,v,c,d)
 print("funkcja2")
 print(a, b, c, d)

-- Forward Vg scan
Vg=b
if b < c then
    while Vg <= c do
        smub.source.levelv = Vg
        smub.source.output = smub.OUTPUT_ON
        delay(0.2)
        print ( Vg, smua.measure.i(smua.nvbuffer1),        smub.measure.i(smub.nvbuffer1))

        smub.source.output = smub.OUTPUT_OFF
        Vg = Vg + d
    end

-- Reverse scan
elseif b > c then
    while Vg >= c do
        smub.source.levelv = Vg
        smub.source.output = smub.OUTPUT_ON
        delay(0.2)
        smua.measure.i(smua.nvbuffer1)
        smub.measure.i(smub.nvbuffer1)

        smub.source.output = smub.OUTPUT_OFF
        Vg = Vg - d
    end

else
    error("Invalid sweep parameters.")
end




end


-------- PARAMETERS --------
-- Vchan	= -20
Vds	 = 5
VgsStart = 0
VgsEnd	 = 10
VgsStep	 = 1
SWEEP	 = 0
NPLN	 = 10
DELATE	 = 1.0

-- Beep in excitement
-- beeper.beep(1, 600)

-- Clear buffers
smua.nvbuffer1.clear()
smub.nvbuffer1.clear()
-- Prepare buffers
smua.nvbuffer1.collectsourcevalues = 1
smub.nvbuffer1.collectsourcevalues = 1
format.data = format.ASCII
smua.nvbuffer1.appendmode = 1
smub.nvbuffer1.appendmode = 1
smua.measure.count = 1
smub.measure.count = 1

-- SMUA setup
smua.measure.delayfactor = 1
smua.measure.nplc = 10
smua.source.func = smua.OUTPUT_DCVOLTS
smua.sense = smua.SENSE_LOCAL
smua.source.autorangev = smua.AUTORANGE_ON
smua.source.limiti = 10e-5
smua.measure.rangei = 10e-5

-- SMUB setup
smub.measure.delayfactor = 1
smub.measure.nplc = 10
smub.source.func = smub.OUTPUT_DCVOLTS
smub.source.limiti = 10e-8

--DISPLAY settings
display.smua.measure.func = display.MEASURE_DCAMPS
display.smub.measure.func = display.MEASURE_DCAMPS
display.screen = display.SMUA_SMUB

-- MEASUREMENT ROUTINE

Vg=VgsStart
smua.source.levelv = Vds
smua.source.output = smua.OUTPUT_ON
smub.source.levelv = Vgs
smub.source.output = smub.OUTPUT_ON
delay(1)

xxx((Vds),(VgsStart), (VgsEnd), (VgsStep))


smua.source.output = smua.OUTPUT_OFF
smub.source.output = smub.OUTPUT_OFF
waitcomplete()
-------- END --------



